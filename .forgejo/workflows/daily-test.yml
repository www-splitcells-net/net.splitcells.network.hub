name: Daily Test

on:
  schedule:
    - cron: '0 0 * * *' # Daily
  push: # This is used, in order to easily and quickly test changes to this workflow file.
jobs:
  test:
    runs-on: docker
    container:
      image: ubuntu:latest
        # This is required, because playwright does not work in `alpine:latest`.
        # Maybe this could be fixed via `playwright.driver.tmpdir`. See https://github.com/microsoft/playwright-java/issues/728
    steps:
      - name: Setup Build
        run: |
          # $(pwd) = /workspace/splitcells-net/net.splitcells.network
          # $HOME and ~/ = /root
          apt update
          apt install -y bash curl git python3 pip pipx openjdk-21-jdk maven
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
          ssh-keyscan -t rsa codeberg.org >> ~/.ssh/known_hosts
          echo "${{ secrets.SSH_KEY_PUBLIC }}" > ~/.ssh/id_rsa.pub
          echo "${{ secrets.SSH_KEY_PRIVATE }}" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          mkdir -p ~/.local/state/net.splitcells.network.worker/repos/public
          cd ~/.local/state/net.splitcells.network.worker/repos/public
          git clone --depth 1 ssh://git@codeberg.org/splitcells-net/net.splitcells.network.git
          git clone --depth 1 ssh://git@codeberg.org/splitcells-net/net.splitcells.network.hub.git
          mkdir -p "$HOME/.config/net.splitcells.network.worker/"
          echo 1 > "$HOME/.config/net.splitcells.network.worker/dominant.management" # Used for reusing SSH connections, which fixes problems with git pulls.
          cd ~/.local/state/net.splitcells.network.worker/repos/public/net.splitcells.network
          bin/worker.bootstrap # This installs the shell project.
      - name: Build Reports
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          NET_SPLITCELLS_MARTINS_AVOTS_WEBSITE_SFTP_PRIVATE_KEY: ${{ secrets.NET_SPLITCELLS_MARTINS_AVOTS_WEBSITE_SFTP_PRIVATE_KEY }}
        run: |
          . ~/bin/net.splitcells.shell.commands.managed/command.managed.export.bin
          cd ~/.local/state/net.splitcells.network.worker/repos/public/net.splitcells.network
          . bin/env.setup.sh
          bin/repos.test.sh
          bin/repos.verify
      - name: Upload Reports
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          NET_SPLITCELLS_MARTINS_AVOTS_WEBSITE_SFTP_PRIVATE_KEY: ${{ secrets.NET_SPLITCELLS_MARTINS_AVOTS_WEBSITE_SFTP_PRIVATE_KEY }}
        run: |
          cd ~/.local/state/net.splitcells.network.worker/repos/public/net.splitcells.network
          set +x # Prevent printing secrets.
          # -z is used because -v is not supported. 
          if [ -z "$NET_SPLITCELLS_MARTINS_AVOTS_WEBSITE_SFTP_PRIVATE_KEY" ]; then
            echo Upload to https://splitcells.net is disabled, because NET_SPLITCELLS_MARTINS_AVOTS_WEBSITE_SFTP_PRIVATE_KEY is not set.
          else
            mkdir -p ~/.ssh-website-upload/
            echo "$NET_SPLITCELLS_MARTINS_AVOTS_WEBSITE_SFTP_PRIVATE_KEY" > ~/.ssh-website-upload/id_rsa
            chmod 700 ~/.ssh-website-upload/id_rsa # Otherwise, scp may not work.
            mkdir -p target/website-upload/public_html/net/splitcells/martins/avots/website/jacoco-aggregate # Using subdirectories, ensures, that scp does not get a problem with missing directories.
            cp -r target/site/jacoco-aggregate/* target/website-upload/public_html/net/splitcells/martins/avots/website/jacoco-aggregate
            ls -al target/website-upload/public_html/net/splitcells/martins/avots/website/jacoco-aggregate # TODO This is debug code.
            set -x
            set -e
            realpath target/website-upload/public_html/net/splitcells/martins/avots/website/jacoco-aggregate
            # The targeted scp upload folder is dependent on the relative source path. Therefore, cd and the current folder are used, in order to avoid this strange mapping.
            cd target/website-upload/
            scp -v -i ~/.ssh-website-upload/id_rsa -o PubkeyAuthentication=yes -o StrictHostKeyChecking=no -r ./ splitcm@www322.your-server.de:
            rm ~/.ssh-website-upload/id_rsa
          fi