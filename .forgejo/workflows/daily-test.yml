name: Daily Test

on:
  schedule:
    - cron: '0 0 * * *' # Daily
  push: # This is used, in order to easily and quickly test changes to this workflow file.
jobs:
  test:
    runs-on: docker
    container:
      image: ubuntu:latest
        # This is required, because playwright does not work in `alpine:latest`.
        # Maybe this could be fixed via `playwright.driver.tmpdir`. See https://github.com/microsoft/playwright-java/issues/728
    steps:
      - name: Setup Build
        run: |
          # $(pwd) = /workspace/splitcells-net/net.splitcells.network
          # $HOME and ~/ = /root
          apt update
          apt install -y bash curl git python3 pip pipx openjdk-21-jdk maven
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
          ssh-keyscan -t rsa codeberg.org >> ~/.ssh/known_hosts
          echo "${{ secrets.SSH_KEY_PUBLIC }}" > ~/.ssh/id_rsa.pub
          echo "${{ secrets.SSH_KEY_PRIVATE }}" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          mkdir -p ~/.local/state/net.splitcells.network.worker/repos/public
          cd ~/.local/state/net.splitcells.network.worker/repos/public
          git clone --depth 1 https://codeberg.org/splitcells-net/net.splitcells.network.git
          git clone --depth 1 https://codeberg.org/splitcells-net/net.splitcells.network.hub.git
      - name: Build
        # TODO This code should be replaced with something like the script `net.splitcells.network/bin/worker.bootstrap`,
        # in order to minimize the amount of Codeberg specific code.
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd ~/.local/state/net.splitcells.network.worker/repos/public/net.splitcells.network
          . bin/worker.bootstrap # This installs the shell project. `. [...]` provides the installed variables to the following commands.
          cd ~/.local/state/net.splitcells.network.worker/repos/public/net.splitcells.network.hub
          # Sonarcloud integration does not work here, as only the `net.splitcells.network` repo is known there.
          mvn -B clean install -Dtest.groups=testing_integration -DexcludedGroups="experimental_test"
          cd ~/.local/state/net.splitcells.network.worker/repos/public/net.splitcells.network
          # Create JaCoCo report:
          # The install goal is required, in order to create the JaCoCo HTML reports.
          # The JaCoCo report is created only for the main report, as otherwise the Distro repo causes errors. 
          mvn -B install -Dtest_codecov=1
          bash -c 'bash <(curl -s https://codecov.io/bash)' # Upload tests to codecov.io. As the default shell is sh, a bash wrapping is used.
          bin/repos.license.check # TODO Enable this, when all repos comply with license check.