name: Daily Test

on:
  schedule:
    - cron: '0 0 * * *' # Daily
  push: # This is used, in order to easily and quickly test changes to this workflow file.#
jobs:
  test:
    runs-on: docker
    container:
      image: ubuntu:latest
        # This is required, because playwright does not work in `alpine:latest`.
      # Maybe this could be fixed via `playwright.driver.tmpdir`. See https://github.com/microsoft/playwright-java/issues/728
    steps:
      - name: Setup Build
        run: |
          apt update # $(pwd) = /workspace/splitcells-net/net.splitcells.network
          apt install -y bash curl git python3 openjdk-21-jdk maven
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
          ssh-keyscan -t rsa codeberg.org >> ~/.ssh/known_hosts
          echo "${{ secrets.SSH_KEY_PUBLIC }}" > ~/.ssh/id_rsa.pub
          echo "${{ secrets.SSH_KEY_PRIVATE }}" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh
          chmod 644 ~/.ssh/*
          cd /workspace/splitcells-net/
          git clone --depth 1 https://codeberg.org/splitcells-net/net.splitcells.network.git
          git clone --depth 1 https://codeberg.org/splitcells-net/net.splitcells.network.hub.git
      - name: Build
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd /workspace/splitcells-net
          echo 333
          net.splitcells.network.hub/bin/net.splitcells.osi.repos.peers | xargs -i sh -c "test -d {} || git clone git@codeberg.org:splitcells-net/{}.git"
          echo 444
          cd /workspace/splitcells-net/net.splitcells.network
          bin/worker.repos.pull
          cd /workspace/splitcells-net/net.splitcells.network.bom
          mvn clean install
          cd /workspace/splitcells-net/net.splitcells.network
          mvn -B clean install org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=www-splitcells-net_net.splitcells.network -Dsonar.test.exclusions=src/main/java/** -Dsonar.organization=www-splitcells-net -Dsonar.host.url=https://sonarcloud.io # `-Dsonar.inclusions=src/main/**,bin/*` does not seem to work.
          bash -c 'bash <(curl -s https://codecov.io/bash)' # Upload tests to codecov.io. As the default shell is sh, a bash wrapping is used.